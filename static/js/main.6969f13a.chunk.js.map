{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","components/Characteristics.js","components/SinglePokemon.js","containers/Client.js","serviceWorker.js","reducer.js","index.js"],"names":["Card","_ref","name","idx","react_default","a","createElement","className","alt","src","concat","CardList","pokemons","search","console","log","length","index_esm","width","height","columnCount","columnWidth","rowCount","rowHeight","overscanRowsCount","props","columnIndex","rowIndex","style","itemKey","url","split","id","react_router_dom","to","components_Card","map","poke","i","pokemonIdx","key","SearchBox","searchChange","aria-label","type","placeholder","onChange","Scroll","overflow","border","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onRequestPokemons","_this$props","searchField","onSearchChange","isPending","filteredPokemons","filter","toLowerCase","includes","components_SearchBox","components_Scroll","ErrorBoundry","components_CardList","connect","searchPokemons","requestPokemons","dispatch","event","payload","target","value","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","results","t0","stop","_x","apply","arguments","Characteristics","chain","img","evolve_from","pic","evolves_to","species","evolving_idx","evolving_src","xmlns","d","SinglePokemon","match","params","spec","char","_this$props$pokemon","pokemon","sprites","abilities","stats","types","weight","_this$props$chararcte","chararcter","front_default","abilityName","ab","ability","join","t","stat","st","base_stat","backgroundColor","role","aria-valuenow","aria-valuemin","aria-valuemax","ev","effort","catchRate","capture_rate","hash_step","hatch_counter","egg_group","egg_groups","el","evolves_from_species","shape","title","href","components_Characteristics","requestPokemon","characteristics","requestPokemonSpecies","_ref2","_callee2","_context2","_x2","fetchByName","_ref3","_callee3","_context3","_x3","getCharacteristics","_ref4","_callee4","_context4","_x4","getSpecies","Client","basename","process","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","initialStateSearch","initialStatePokemons","initStatePokemon","initStatSpecies","logger","createLogger","rootReducers","combineReducers","undefined","action","assign","objectSpread","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","Client_Client","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6969f13a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ name, idx }) => {\n  return (\n    <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5 i-ns blue\">\n      <img\n        alt=\"pokemon-img\"\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${idx}.png?size=200x200`}\n      />\n\n      <div>\n        <h2>{name}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"./Card\";\nimport { FixedSizeGrid as Grid } from \"react-window\";\n\nconst CardList = ({ pokemons, search }) => {\n  console.log(pokemons);\n  const Cell = props => {\n    const { columnIndex, rowIndex, style } = props;\n    const columnCount = 5;\n    const itemKey = columnIndex + rowIndex * columnCount;\n    const idx =\n      pokemons && pokemons[itemKey]\n        ? pokemons[itemKey].url.split(\"/\")[\n            pokemons[itemKey].url.split(\"/\").length - 2\n          ]\n        : null;\n    const name = pokemons && pokemons[itemKey] ? pokemons[itemKey].name : null;\n    const id = pokemons && pokemons[itemKey] ? pokemons[itemKey].id : null;\n\n    return (\n      <Link to={`/pokemon/${name}/${itemKey + 1}`}>\n        <Card id={id} name={name} idx={idx} style={style} />\n      </Link>\n    );\n  };\n\n  return search.length === 0 ? (\n    <Grid\n      className=\"tc grow br3 pa3 ma2 dib\"\n      width={1000}\n      height={800}\n      columnCount={5}\n      columnWidth={200}\n      rowCount={20}\n      rowHeight={200}\n      overscanRowsCount={3}\n    >\n      {Cell}\n    </Grid>\n  ) : (\n    <div>\n      {pokemons.length ? (\n        pokemons.map((poke, i) => {\n          const pokemonIdx = pokemons[i].url.split(\"/\")[\n            pokemons[i].url.split(\"/\").length - 2\n          ];\n          return (\n            <Link to={`/pokemon/${pokemons[i].name}/${i + 1}`} key={i}>\n              <Card id={poke.id} name={poke.name} idx={pokemonIdx} />\n            </Link>\n          );\n        })\n      ) : (\n        <div>You have not created this pokemon yet ...</div>\n      )}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        aria-label=\"Search pokemons\"\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search pokemons\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = props => {\n  return (\n    <div\n      style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"800px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setSearchField, requestPokemons } from \"../actions\";\n\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\nimport \"./App.css\";\n\n// const CardList = lazy(() => import(\"../components/CardList\"));\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchPokemons.searchField,\n    pokemons: state.requestPokemons.pokemons,\n    isPending: state.requestPokemons.isPending\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestPokemons: () => dispatch(requestPokemons())\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestPokemons();\n  }\n\n  render() {\n    const { pokemons, searchField, onSearchChange, isPending } = this.props;\n    const filteredPokemons =\n      pokemons && searchField.length > 0\n        ? pokemons.filter(poke => {\n            return poke.name.toLowerCase().includes(searchField.toLowerCase());\n          })\n        : pokemons;\n\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f1\">Pokemons Friends</h1>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          {isPending ? (\n            <h1>Loading</h1>\n          ) : (\n            <ErrorBoundry>\n              <CardList\n                pokemons={filteredPokemons}\n                isPending={isPending}\n                search={searchField}\n              />\n            </ErrorBoundry>\n          )}\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import axios from \"axios\";\n\nimport {\n  CHANGE_SEARCHFIELD,\n  REQUEST_POKEMONS_PENDING,\n  REQUEST_POKEMONS_SUCCESS,\n  REQUEST_POKEMONS_FAILED,\n  GET_POKEMON_BY_NAME,\n  GETTING_POKEMON_FAILED,\n  GET_CHARACTERISTICS,\n  GET_SPECIES,\n  GET_SPECIES_ERROR\n} from \"./constants\";\n\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCHFIELD,\n  payload: text\n});\n\nexport const requestPokemons = () => async dispatch => {\n  try {\n    dispatch({ type: REQUEST_POKEMONS_PENDING });\n    const url = `https://pokeapi.co/api/v2/pokemon/?limit=850`;\n    const res = await axios.get(url);\n    const poke = res.data;\n    dispatch({ type: REQUEST_POKEMONS_SUCCESS, payload: poke.results });\n  } catch (error) {\n    dispatch({ type: REQUEST_POKEMONS_FAILED, payload: error });\n  }\n};\n\nexport const fetchByName = name => async dispatch => {\n  try {\n    const url = `https://pokeapi.co/api/v2/pokemon/${name}`;\n    const res = await axios.get(url);\n    const pokemon = res.data;\n    dispatch({ type: GET_POKEMON_BY_NAME, pokemon });\n  } catch (error) {\n    dispatch({ type: GETTING_POKEMON_FAILED, error });\n  }\n};\n\nexport const getCharacteristics = id => async dispatch => {\n  try {\n    const url = `https://pokeapi.co/api/v2/evolution-chain/${id}`;\n    const poke = await axios.get(url);\n    const data = poke.data;\n    dispatch({ type: GET_CHARACTERISTICS, char: data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getSpecies = name => async dispatch => {\n  try {\n    const url = `https://pokeapi.co/api/v2/pokemon-species/${name}`;\n    const res = await axios.get(url);\n    const species = res.data;\n    dispatch({ type: GET_SPECIES, species });\n  } catch (error) {\n    dispatch({ type: GET_SPECIES_ERROR, error });\n  }\n};\n","export const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\";\n\nexport const REQUEST_POKEMONS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_POKEMONS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_POKEMONS_FAILED = \"REQUEST_ROBOTS_FAILED\";\nexport const GET_POKEMON_BY_NAME = \"GET_POKEMON_BY_NAME\";\nexport const GETTING_POKEMON_FAILED = \"GETTING_POKEMON_FAILED\";\nexport const GET_CHARACTERISTICS = \"GET_CHARACTERISTICS\";\nexport const GET_SPECIES_ERROR = \"GET_SPECIES_ERROR\";\nexport const GET_SPECIES = \"GET_SPECIES\";\n","import React, { Component } from \"react\";\n\nclass Characteristics extends Component {\n  render() {\n    const { chain, img, evolve_from, name } = this.props;\n    const pic = img && img;\n    const idx =\n      chain && chain.evolves_to.length > 1\n        ? chain.evolves_to[0].species.url.split(\"/\")[\n            chain.evolves_to[0].species.url.split(\"/\").length - 2\n          ]\n        : null;\n    const evolving_idx =\n      evolve_from && evolve_from.split(\"/\")[evolve_from.split(\"/\").length - 2];\n\n    const src = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${idx}.png?size=200x200`;\n    const evolving_src =\n      evolving_idx &&\n      `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolving_idx}.png?size=200x200`;\n\n    if (evolving_idx) {\n      return (\n        <div className=\"evolutions\">\n          <div className=\"evolution-row\">\n            <div className=\"evolution-row-inner\">\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={evolving_src} alt=\"\" />\n              </div>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg\">\n                <path d=\"M24 16V8l16 16-16 16v-8H8V16z\" />\n              </svg>\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={pic} alt=\"\" />\n              </div>\n            </div>\n            <div className=\"evolution-row-inner\">\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={pic} alt=\"\" />\n              </div>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg\">\n                <path d=\"M24 16V8l16 16-16 16v-8H8V16z\" />\n              </svg>\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={src} alt=\"\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (!idx) {\n      return (\n        <div>\n          <p>\n            <strong>{name} </strong> has no evolutions\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"evolutions\">\n          <div className=\"evolution-row\">\n            <div className=\"evolution-row-inner\">\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={pic} alt=\"\" />\n              </div>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg\">\n                <path d=\"M24 16V8l16 16-16 16v-8H8V16z\" />\n              </svg>\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={src} alt=\"\" />\n              </div>\n            </div>\n            <div className=\"evolution-label\">\n              <span>\n                <strong />.\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Characteristics;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchByName, getCharacteristics, getSpecies } from \"../actions\";\nimport Characteristics from \"./Characteristics\";\n\nclass SinglePokemon extends Component {\n  componentDidMount() {\n    const name = this.props.match.params.name;\n    const id = this.props.match.params.id;\n    this.props.poke(name);\n    this.props.spec(name);\n    this.props.char(id);\n  }\n\n  render() {\n    const {\n      sprites,\n      abilities,\n      height,\n      name,\n      stats,\n      types,\n      weight\n    } = this.props.pokemon;\n\n    const { id, chain } = this.props.chararcter;\n    const pic = sprites && sprites.front_default;\n\n    const abilityName =\n      abilities && abilities\n        ? abilities.map(ab => ab.ability.name).join(\", \")\n        : \"NA\";\n    const type =\n      types &&\n      types\n        .map(t => {\n          return t.type.name;\n        })\n        .join(\", \");\n\n    const stat =\n      stats &&\n      stats.map(st => {\n        return (\n          <div className=\"row align-items-center\" key={st.stat.name}>\n            <div className={`col-12 col-md-${3}`}>{st.stat.name}:</div>\n            <div className={`col-12 col-md${9}`}>\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar \"\n                  style={{\n                    width: `${st.base_stat / 1.7}%`,\n                    backgroundColor: `#c2185b`\n                  }}\n                  role=\"progressbar\"\n                  aria-valuenow=\"25\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >\n                  <small>{st.base_stat}</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      });\n\n    const ev =\n      stats &&\n      stats\n        .map(st => {\n          return `${st.effort} ${st.stat.name}`;\n        })\n        .join(\", \");\n\n    const catchRate =\n      this.props.species && this.props.species.capture_rate\n        ? this.props.species.capture_rate\n        : \"NA\";\n\n    const hash_step =\n      this.props.species && this.props.species.hatch_counter\n        ? this.props.species.hatch_counter\n        : \"NA\";\n\n    const egg_group =\n      this.props.species.egg_groups && this.props.species.egg_groups\n        ? this.props.species.egg_groups.map(el => el.name).join(\", \")\n        : \"NA\";\n\n    const evolve_from =\n      this.props.species.evolves_from_species &&\n      this.props.species.evolves_from_species.url;\n\n    const shape =\n      this.props.species.shape && this.props.species.shape.name\n        ? this.props.species.shape.name\n        : \"NA\";\n    return (\n      this.props.match.params.id && (\n        <div className=\"tc\">\n          <article className=\"mw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10\">\n            <div className=\"tc\">\n              <h5>Id: {id}</h5>\n              <img\n                alt=\"pokemon\"\n                src={pic}\n                className=\"br-100 h4 w4 dib ba b--black-05 pa2\"\n                title=\"Photo of pokemon\"\n              />\n              <h1 className=\"f3 mb2\">\n                <a href=\"#\" className=\"f5 fw4 gray mt0\">\n                  {name}\n                </a>\n              </h1>\n              <div className=\"monster-minutia\">\n                <strong>Type: </strong>\n                {type}\n              </div>\n            </div>\n          </article>\n\n          <article className=\"mw7 center bg-white br4 pa3 pa4-ns mv3 ba b--black-10\">\n            <div className=\"tc\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-md-9\">{stat}</div>\n                <div className=\"row mt-1\" />\n              </div>\n              <hr />\n\n              <div className=\"f3 mb2 bg-green\">Profile</div>\n              <div className=\"monster-minutia\">\n                <strong>Height: </strong>\n                <span>{height} m</span>\n                <strong>Weight: </strong>\n                <span>{weight} kg</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Catch Rate: </strong>\n                <span>{catchRate}</span>\n                <strong>Egg groups: </strong>\n                <span>{egg_group}</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Abilities: </strong>\n                <span>{abilityName} </span>\n                <strong>EVs: </strong>\n                <span>{ev}</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Hash Steps: </strong>\n                <span>{hash_step}</span>\n                <strong>Shape: </strong>\n                <span>{shape}</span>\n              </div>\n            </div>\n\n            <div className=\"f3 mb2 bg-green\">Evolution</div>\n            <Characteristics\n              id={id}\n              chain={chain}\n              img={pic}\n              evolve_from={evolve_from}\n              name={name}\n            />\n          </article>\n        </div>\n      )\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    pokemon: state.requestPokemon.pokemon,\n    chararcter: state.requestPokemon.characteristics,\n    species: state.requestPokemonSpecies.species\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    poke: name => dispatch(fetchByName(name)),\n    char: id => dispatch(getCharacteristics(id)),\n    spec: name => dispatch(getSpecies(name))\n  };\n};\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(SinglePokemon);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport SinglePokemon from \"../components/SinglePokemon\";\n\nexport default class Client extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/pokemon/:name/:id\" component={SinglePokemon} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_POKEMONS_PENDING,\n  REQUEST_POKEMONS_SUCCESS,\n  REQUEST_POKEMONS_FAILED,\n  GET_POKEMON_BY_NAME,\n  GETTING_POKEMON_FAILED,\n  GET_CHARACTERISTICS,\n  GET_SPECIES,\n  GET_SPECIES_ERROR\n} from \"./constants\";\n\nconst initialStateSearch = {\n  searchField: \"\"\n};\n\nexport const searchPokemons = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialStatePokemons = {\n  pokemons: [],\n  isPending: true\n};\n\nexport const requestPokemons = (state = initialStatePokemons, action = {}) => {\n  switch (action.type) {\n    case REQUEST_POKEMONS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_POKEMONS_SUCCESS:\n      return Object.assign({}, state, {\n        pokemons: action.payload,\n        isPending: false\n      });\n    case REQUEST_POKEMONS_FAILED:\n      return Object.assign({}, state, { error: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initStatePokemon = {\n  pokemon: [],\n  characteristics: []\n};\nexport const requestPokemon = (state = initStatePokemon, action = {}) => {\n  switch (action.type) {\n    case GET_POKEMON_BY_NAME:\n      return {\n        ...state,\n        pokemon: action.pokemon\n      };\n    case GETTING_POKEMON_FAILED:\n      return {\n        ...state,\n        error: action.error\n      };\n    case GET_CHARACTERISTICS:\n      return {\n        ...state,\n        characteristics: action.char\n      };\n    default:\n      return state;\n  }\n};\n\nconst initStatSpecies = {\n  species: []\n};\nexport const requestPokemonSpecies = (state = initStatSpecies, action = {}) => {\n  switch (action.type) {\n    case GET_SPECIES:\n      return {\n        ...state,\n        species: action.species\n      };\n    case GET_SPECIES_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport \"tachyons\";\n\nimport Client from \"./containers/Client\";\n\nimport registerServiceWorker from \"./serviceWorker\";\nimport {\n  requestPokemons,\n  searchPokemons,\n  requestPokemon,\n  requestPokemonSpecies\n} from \"./reducer\";\n\nimport \"./index.css\";\n\nconst logger = createLogger();\n\nconst rootReducers = combineReducers({\n  requestPokemons,\n  searchPokemons,\n  requestPokemon,\n  requestPokemonSpecies\n});\n\nconst store = createStore(\n  rootReducers,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Client />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}