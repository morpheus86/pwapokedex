{"version":3,"sources":["components/Card.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","components/Characteristics.js","components/SinglePokemon.js","containers/Client.js","serviceWorker.js","reducer.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Card","_ref","name","idx","a","createElement","className","alt","src","concat","SearchBox","searchChange","react_default","aria-label","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","CardList","lazy","e","then","bind","App","onRequestPokemons","_this$props","pokemons","searchField","onSearchChange","isPending","filteredPokemons","filter","poke","toLowerCase","includes","components_SearchBox","components_Scroll","react","fallback","ErrorBoundry","App_CardList","connect","searchPokemons","requestPokemons","dispatch","event","payload","target","value","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","results","t0","stop","_x","apply","arguments","pokeList","length","map","i","pokemonIdx","url","split","lib_default","key","offset","once","debounce","react_router_dom","to","id","SinglePokemon","match","params","spec","char","_this$props$pokemon","pokemon","sprites","abilities","stats","types","weight","_this$props$chararcte","chararcter","chain","pic","front_default","abilityName","ab","ability","join","t","stat","st","width","base_stat","backgroundColor","role","aria-valuenow","aria-valuemin","aria-valuemax","ev","effort","catchRate","species","capture_rate","hash_step","hatch_counter","egg_group","egg_groups","el","evolve_from","evolves_from_species","shape","title","href","Characteristics","img","requestPokemon","characteristics","requestPokemonSpecies","_ref2","_callee2","_context2","_x2","fetchByName","_ref3","_callee3","_context3","console","_x3","getCharacteristics","_ref4","_callee4","_context4","_x4","getSpecies","Client","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","initialStateSearch","initialStatePokemons","initStatePokemon","initStatSpecies","logger","createLogger","rootReducers","combineReducers","undefined","action","assign","objectSpread","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","Client_Client","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e0cc1f86.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ name, idx }) => {\n  return (\n    <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\">\n      <img\n        alt=\"pokemon-img\"\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${idx}.png?size=200x200`}\n      />\n\n      <div>\n        <h2>{name}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        aria-label=\"Search Robots\"\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = props => {\n  return (\n    <div\n      style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"800px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setSearchField, requestPokemons } from \"../actions\";\n\n// import CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\nimport \"./App.css\";\n\nconst CardList = lazy(() => import(\"../components/CardList\"));\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchPokemons.searchField,\n    pokemons: state.requestPokemons.pokemons,\n    isPending: state.requestPokemons.isPending\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestPokemons: () => dispatch(requestPokemons())\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestPokemons();\n  }\n\n  render() {\n    const { pokemons, searchField, onSearchChange, isPending } = this.props;\n    const filteredPokemons =\n      pokemons &&\n      pokemons.filter(poke => {\n        return poke.name.toLowerCase().includes(searchField.toLowerCase());\n      });\n\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <Suspense fallback={<div>Loading...</div>}>\n            {isPending ? (\n              <h1>Loading</h1>\n            ) : (\n              <ErrorBoundry>\n                <CardList pokemons={filteredPokemons} isPending={isPending} />\n              </ErrorBoundry>\n            )}\n          </Suspense>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import axios from \"axios\";\n\nimport {\n  CHANGE_SEARCHFIELD,\n  REQUEST_POKEMONS_PENDING,\n  REQUEST_POKEMONS_SUCCESS,\n  REQUEST_POKEMONS_FAILED,\n  GET_POKEMON_BY_NAME,\n  GETTING_POKEMON_FAILED,\n  GET_CHARACTERISTICS,\n  GET_SPECIES,\n  GET_SPECIES_ERROR\n} from \"./constants\";\n\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCHFIELD,\n  payload: text\n});\n\nexport const requestPokemons = () => async dispatch => {\n  try {\n    dispatch({ type: REQUEST_POKEMONS_PENDING });\n    const url = `https://pokeapi.co/api/v2/pokemon/?limit=850`;\n    const res = await axios.get(url);\n    const poke = res.data;\n    dispatch({ type: REQUEST_POKEMONS_SUCCESS, payload: poke.results });\n  } catch (error) {\n    dispatch({ type: REQUEST_POKEMONS_FAILED, payload: error });\n  }\n};\n\nexport const fetchByName = name => async dispatch => {\n  try {\n    const url = `https://pokeapi.co/api/v2/pokemon/${name}`;\n    const res = await axios.get(url);\n    const pokemon = res.data;\n    dispatch({ type: GET_POKEMON_BY_NAME, pokemon });\n  } catch (error) {\n    dispatch({ type: GETTING_POKEMON_FAILED, error });\n  }\n};\n\nexport const getCharacteristics = id => async dispatch => {\n  try {\n    const url = `https://pokeapi.co/api/v2/evolution-chain/${id}`;\n    const poke = await axios.get(url);\n    const data = poke.data;\n    dispatch({ type: GET_CHARACTERISTICS, char: data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getSpecies = name => async dispatch => {\n  try {\n    const url = `https://pokeapi.co/api/v2/pokemon-species/${name}`;\n    const res = await axios.get(url);\n    const species = res.data;\n    dispatch({ type: GET_SPECIES, species });\n  } catch (error) {\n    dispatch({ type: GET_SPECIES_ERROR, error });\n  }\n};\n","export const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\";\n\nexport const REQUEST_POKEMONS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_POKEMONS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_POKEMONS_FAILED = \"REQUEST_ROBOTS_FAILED\";\nexport const GET_POKEMON_BY_NAME = \"GET_POKEMON_BY_NAME\";\nexport const GETTING_POKEMON_FAILED = \"GETTING_POKEMON_FAILED\";\nexport const GET_CHARACTERISTICS = \"GET_CHARACTERISTICS\";\nexport const GET_SPECIES_ERROR = \"GET_SPECIES_ERROR\";\nexport const GET_SPECIES = \"GET_SPECIES\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LazyLoad from \"react-lazyload\";\nimport Card from \"./Card\";\n\nconst CardList = ({ pokemons }) => {\n  const pokeList =\n    pokemons.length > 0 ? (\n      <div>\n        {pokemons.map((poke, i) => {\n          const pokemonIdx = pokemons[i].url.split(\"/\")[\n            pokemons[i].url.split(\"/\").length - 2\n          ];\n          return (\n            <LazyLoad key={i} offset={200} once={true} debounce={true}>\n              <Link to={`/pokemon/${pokemons[i].name}/${i + 1}`}>\n                <Card id={poke.id} name={poke.name} idx={pokemonIdx} />\n              </Link>\n            </LazyLoad>\n          );\n        })}\n      </div>\n    ) : (\n      <div className=\"tc\">\n        <h1>Loading...</h1>\n      </div>\n    );\n\n  return <div>{pokeList}</div>;\n};\n\nexport default CardList;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchByName, getCharacteristics, getSpecies } from \"../actions\";\nimport Characteristics from \"./Characteristics\";\n\nclass SinglePokemon extends Component {\n  componentDidMount() {\n    const name = this.props.match.params.name;\n    const id = this.props.match.params.id;\n    this.props.poke(name);\n    this.props.spec(name);\n    this.props.char(id);\n  }\n\n  render() {\n    const {\n      sprites,\n      abilities,\n      height,\n      name,\n      stats,\n      types,\n      weight\n    } = this.props.pokemon;\n\n    const { id, chain } = this.props.chararcter;\n    const pic = sprites && sprites.front_default;\n\n    const abilityName =\n      abilities && abilities\n        ? abilities.map(ab => ab.ability.name).join(\", \")\n        : \"NA\";\n    const type =\n      types &&\n      types\n        .map(t => {\n          return t.type.name;\n        })\n        .join(\", \");\n\n    const stat =\n      stats &&\n      stats.map(st => {\n        return (\n          <div className=\"row align-items-center\" key={st.stat.name}>\n            <div className={`col-12 col-md-${3}`}>{st.stat.name}:</div>\n            <div className={`col-12 col-md${9}`}>\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar \"\n                  style={{\n                    width: `${st.base_stat / 1.7}%`,\n                    backgroundColor: `#c2185b`\n                  }}\n                  role=\"progressbar\"\n                  aria-valuenow=\"25\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >\n                  <small>{st.base_stat}</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      });\n\n    const ev =\n      stats &&\n      stats\n        .map(st => {\n          return `${st.effort} ${st.stat.name}`;\n        })\n        .join(\", \");\n\n    const catchRate =\n      this.props.species && this.props.species.capture_rate\n        ? this.props.species.capture_rate\n        : \"NA\";\n\n    const hash_step =\n      this.props.species && this.props.species.hatch_counter\n        ? this.props.species.hatch_counter\n        : \"NA\";\n\n    const egg_group =\n      this.props.species.egg_groups && this.props.species.egg_groups\n        ? this.props.species.egg_groups.map(el => el.name).join(\", \")\n        : \"NA\";\n\n    const evolve_from =\n      this.props.species.evolves_from_species &&\n      this.props.species.evolves_from_species.url;\n\n    const shape =\n      this.props.species.shape && this.props.species.shape.name\n        ? this.props.species.shape.name\n        : \"NA\";\n    return (\n      this.props.match.params.id && (\n        <div className=\"tc\">\n          <article className=\"mw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10\">\n            <div className=\"tc\">\n              <h5>Id: {id}</h5>\n              <img\n                alt=\"pokemon\"\n                src={pic}\n                className=\"br-100 h4 w4 dib ba b--black-05 pa2\"\n                title=\"Photo of pokemon\"\n              />\n              <h1 className=\"f3 mb2\">\n                <a href=\"#\" className=\"f5 fw4 gray mt0\">\n                  {name}\n                </a>\n              </h1>\n              <div className=\"monster-minutia\">\n                <strong>Type: </strong>\n                {type}\n              </div>\n            </div>\n          </article>\n\n          <article className=\"mw7 center bg-white br4 pa3 pa4-ns mv3 ba b--black-10\">\n            <div className=\"tc\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-md-9\">{stat}</div>\n                <div className=\"row mt-1\" />\n              </div>\n              <hr />\n\n              <div className=\"f3 mb2 bg-green\">Profile</div>\n              <div className=\"monster-minutia\">\n                <strong>Height: </strong>\n                <span>{height} m</span>\n                <strong>Weight: </strong>\n                <span>{weight} kg</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Catch Rate: </strong>\n                <span>{catchRate}</span>\n                <strong>Egg groups: </strong>\n                <span>{egg_group}</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Abilities: </strong>\n                <span>{abilityName} </span>\n                <strong>EVs: </strong>\n                <span>{ev}</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Hash Steps: </strong>\n                <span>{hash_step}</span>\n                <strong>Shape: </strong>\n                <span>{shape}</span>\n              </div>\n            </div>\n\n            <div className=\"f3 mb2 bg-green\">Evolution</div>\n            <Characteristics\n              id={id}\n              chain={chain}\n              img={pic}\n              evolve_from={evolve_from}\n              name={name}\n            />\n          </article>\n        </div>\n      )\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    pokemon: state.requestPokemon.pokemon,\n    chararcter: state.requestPokemon.characteristics,\n    species: state.requestPokemonSpecies.species\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    poke: name => dispatch(fetchByName(name)),\n    char: id => dispatch(getCharacteristics(id)),\n    spec: name => dispatch(getSpecies(name))\n  };\n};\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(SinglePokemon);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport SinglePokemon from \"../components/SinglePokemon\";\n\nexport default class Client extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/pokemon/:name/:id\" component={SinglePokemon} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_POKEMONS_PENDING,\n  REQUEST_POKEMONS_SUCCESS,\n  REQUEST_POKEMONS_FAILED,\n  GET_POKEMON_BY_NAME,\n  GETTING_POKEMON_FAILED,\n  GET_CHARACTERISTICS,\n  GET_SPECIES,\n  GET_SPECIES_ERROR\n} from \"./constants\";\n\nconst initialStateSearch = {\n  searchField: \"\"\n};\n\nexport const searchPokemons = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialStatePokemons = {\n  pokemons: [],\n  isPending: true\n};\n\nexport const requestPokemons = (state = initialStatePokemons, action = {}) => {\n  switch (action.type) {\n    case REQUEST_POKEMONS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_POKEMONS_SUCCESS:\n      return Object.assign({}, state, {\n        pokemons: action.payload,\n        isPending: false\n      });\n    case REQUEST_POKEMONS_FAILED:\n      return Object.assign({}, state, { error: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initStatePokemon = {\n  pokemon: [],\n  characteristics: []\n};\nexport const requestPokemon = (state = initStatePokemon, action = {}) => {\n  switch (action.type) {\n    case GET_POKEMON_BY_NAME:\n      return {\n        ...state,\n        pokemon: action.pokemon\n      };\n    case GETTING_POKEMON_FAILED:\n      return {\n        ...state,\n        error: action.error\n      };\n    case GET_CHARACTERISTICS:\n      return {\n        ...state,\n        characteristics: action.char\n      };\n    default:\n      return state;\n  }\n};\n\nconst initStatSpecies = {\n  species: []\n};\nexport const requestPokemonSpecies = (state = initStatSpecies, action = {}) => {\n  switch (action.type) {\n    case GET_SPECIES:\n      return {\n        ...state,\n        species: action.species\n      };\n    case GET_SPECIES_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport \"tachyons\";\n\nimport Client from \"./containers/Client\";\n\nimport { register } from \"./serviceWorker\";\nimport {\n  requestPokemons,\n  searchPokemons,\n  requestPokemon,\n  requestPokemonSpecies\n} from \"./reducer\";\n\nimport \"./index.css\";\n\nconst logger = createLogger();\n\nconst rootReducers = combineReducers({\n  requestPokemons,\n  searchPokemons,\n  requestPokemon,\n  requestPokemonSpecies\n});\n\nconst store = createStore(\n  rootReducers,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Client />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregister();\n"],"sourceRoot":""}