{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","components/Characteristics.js","components/SinglePokemon.js","containers/Client.js","serviceWorker.js","reducer.js","index.js"],"names":["Card","_ref","name","idx","count","react_default","a","createElement","className","alt","src","concat","CardList","pokemons","length","index_esm","width","height","columnCount","columnWidth","rowCount","rowHeight","overscanRowsCount","props","columnIndex","rowIndex","style","itemKey","url","split","id","react_router_dom","to","components_Card","SearchBox","searchChange","aria-label","type","placeholder","onChange","Scroll","overflow","border","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onRequestPokemons","_this$props","searchField","onSearchChange","isPending","filteredPokemons","filter","poke","toLowerCase","includes","components_SearchBox","components_Scroll","ErrorBoundry","components_CardList","connect","searchPokemons","requestPokemons","dispatch","event","payload","target","value","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","results","t0","stop","_x","apply","arguments","Characteristics","chain","img","evolve_from","pic","evolves_to","species","evolving_idx","evolving_src","xmlns","d","SinglePokemon","match","params","spec","char","_this$props$pokemon","pokemon","sprites","abilities","stats","types","weight","_this$props$chararcte","chararcter","front_default","abilityName","map","ab","ability","join","t","stat","st","key","base_stat","backgroundColor","role","aria-valuenow","aria-valuemin","aria-valuemax","ev","effort","catchRate","capture_rate","hash_step","hatch_counter","egg_group","egg_groups","el","evolves_from_species","shape","title","href","components_Characteristics","requestPokemon","characteristics","requestPokemonSpecies","_ref2","_callee2","_context2","_x2","fetchByName","_ref3","_callee3","_context3","console","_x3","getCharacteristics","_ref4","_callee4","_context4","_x4","getSpecies","Client","basename","process","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","initialStateSearch","initialStatePokemons","initStatePokemon","initStatSpecies","logger","createLogger","rootReducers","combineReducers","undefined","action","assign","objectSpread","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","Client_Client","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.21d255cc.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ name, idx, count }) => {\n  return (\n    <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\">\n      <img\n        alt=\"pokemon-img\"\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${idx}.png?size=200x200`}\n      />\n\n      <div>\n        <h2>{name}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"./Card\";\nimport { FixedSizeGrid as Grid } from \"react-window\";\n\nconst CardList = ({ pokemons }) => {\n  const Cell = props => {\n    const { columnIndex, rowIndex, style } = props;\n    const columnCount = 5;\n    const itemKey = columnIndex + rowIndex * columnCount;\n    const idx =\n      pokemons && pokemons[itemKey]\n        ? pokemons[itemKey].url.split(\"/\")[\n            pokemons[itemKey].url.split(\"/\").length - 2\n          ]\n        : null;\n    const name = pokemons && pokemons[itemKey] ? pokemons[itemKey].name : null;\n    const id = pokemons && pokemons[itemKey] ? pokemons[itemKey].id : null;\n\n    return (\n      <Link to={`/pokemon/${name}/${itemKey + 1}`}>\n        <Card id={id} name={name} idx={idx} style={style} />\n      </Link>\n    );\n  };\n\n  return pokemons.length > 0 ? (\n    <Grid\n      className=\"\"\n      width={1000}\n      height={800}\n      columnCount={5}\n      columnWidth={200}\n      rowCount={20}\n      rowHeight={200}\n      overscanRowsCount={3}\n    >\n      {Cell}\n    </Grid>\n  ) : (\n    <div>Loading ...</div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        aria-label=\"Search pokemons\"\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = props => {\n  return (\n    <div\n      style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"800px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setSearchField, requestPokemons } from \"../actions\";\n\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\nimport \"./App.css\";\n\n// const CardList = lazy(() => import(\"../components/CardList\"));\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchPokemons.searchField,\n    pokemons: state.requestPokemons.pokemons,\n    isPending: state.requestPokemons.isPending\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestPokemons: () => dispatch(requestPokemons())\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestPokemons();\n  }\n\n  render() {\n    const { pokemons, searchField, onSearchChange, isPending } = this.props;\n    const filteredPokemons =\n      pokemons &&\n      pokemons.filter(poke => {\n        return poke.name.toLowerCase().includes(searchField.toLowerCase());\n      });\n\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f1\">PokemonsFriends</h1>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          {/* <Suspense fallback={<div>Loading...</div>}> */}\n          {isPending ? (\n            <h1>Loading</h1>\n          ) : (\n            <ErrorBoundry>\n              <CardList pokemons={filteredPokemons} isPending={isPending} />\n            </ErrorBoundry>\n          )}\n          {/* </Suspense> */}\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import axios from \"axios\";\n\nimport {\n  CHANGE_SEARCHFIELD,\n  REQUEST_POKEMONS_PENDING,\n  REQUEST_POKEMONS_SUCCESS,\n  REQUEST_POKEMONS_FAILED,\n  GET_POKEMON_BY_NAME,\n  GETTING_POKEMON_FAILED,\n  GET_CHARACTERISTICS,\n  GET_SPECIES,\n  GET_SPECIES_ERROR\n} from \"./constants\";\n\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCHFIELD,\n  payload: text\n});\n\nexport const requestPokemons = () => async dispatch => {\n  try {\n    dispatch({ type: REQUEST_POKEMONS_PENDING });\n    const url = `https://pokeapi.co/api/v2/pokemon/?limit=850`;\n    const res = await axios.get(url);\n    const poke = res.data;\n    dispatch({ type: REQUEST_POKEMONS_SUCCESS, payload: poke.results });\n  } catch (error) {\n    dispatch({ type: REQUEST_POKEMONS_FAILED, payload: error });\n  }\n};\n\nexport const fetchByName = name => async dispatch => {\n  try {\n    const url = `https://pokeapi.co/api/v2/pokemon/${name}`;\n    const res = await axios.get(url);\n    const pokemon = res.data;\n    dispatch({ type: GET_POKEMON_BY_NAME, pokemon });\n  } catch (error) {\n    dispatch({ type: GETTING_POKEMON_FAILED, error });\n  }\n};\n\nexport const getCharacteristics = id => async dispatch => {\n  try {\n    const url = `https://pokeapi.co/api/v2/evolution-chain/${id}`;\n    const poke = await axios.get(url);\n    const data = poke.data;\n    dispatch({ type: GET_CHARACTERISTICS, char: data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getSpecies = name => async dispatch => {\n  try {\n    const url = `https://pokeapi.co/api/v2/pokemon-species/${name}`;\n    const res = await axios.get(url);\n    const species = res.data;\n    dispatch({ type: GET_SPECIES, species });\n  } catch (error) {\n    dispatch({ type: GET_SPECIES_ERROR, error });\n  }\n};\n","export const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\";\n\nexport const REQUEST_POKEMONS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_POKEMONS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_POKEMONS_FAILED = \"REQUEST_ROBOTS_FAILED\";\nexport const GET_POKEMON_BY_NAME = \"GET_POKEMON_BY_NAME\";\nexport const GETTING_POKEMON_FAILED = \"GETTING_POKEMON_FAILED\";\nexport const GET_CHARACTERISTICS = \"GET_CHARACTERISTICS\";\nexport const GET_SPECIES_ERROR = \"GET_SPECIES_ERROR\";\nexport const GET_SPECIES = \"GET_SPECIES\";\n","import React, { Component } from \"react\";\n\nclass Characteristics extends Component {\n  render() {\n    const { chain, img, evolve_from, name } = this.props;\n    const pic = img && img;\n    const idx =\n      chain && chain.evolves_to.length > 1\n        ? chain.evolves_to[0].species.url.split(\"/\")[\n            chain.evolves_to[0].species.url.split(\"/\").length - 2\n          ]\n        : null;\n    const evolving_idx =\n      evolve_from && evolve_from.split(\"/\")[evolve_from.split(\"/\").length - 2];\n\n    const src = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${idx}.png?size=200x200`;\n    const evolving_src =\n      evolving_idx &&\n      `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolving_idx}.png?size=200x200`;\n\n    if (evolving_idx) {\n      return (\n        <div className=\"evolutions\">\n          <div className=\"evolution-row\">\n            <div className=\"evolution-row-inner\">\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={evolving_src} alt=\"\" />\n              </div>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg\">\n                <path d=\"M24 16V8l16 16-16 16v-8H8V16z\" />\n              </svg>\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={pic} alt=\"\" />\n              </div>\n            </div>\n            <div className=\"evolution-row-inner\">\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={pic} alt=\"\" />\n              </div>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg\">\n                <path d=\"M24 16V8l16 16-16 16v-8H8V16z\" />\n              </svg>\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={src} alt=\"\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (!idx) {\n      return (\n        <div>\n          <p>\n            <strong>{name} </strong> has no evolutions\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"evolutions\">\n          <div className=\"evolution-row\">\n            <div className=\"evolution-row-inner\">\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={pic} alt=\"\" />\n              </div>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg\">\n                <path d=\"M24 16V8l16 16-16 16v-8H8V16z\" />\n              </svg>\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={src} alt=\"\" />\n              </div>\n            </div>\n            <div className=\"evolution-label\">\n              <span>\n                <strong />.\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Characteristics;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchByName, getCharacteristics, getSpecies } from \"../actions\";\nimport Characteristics from \"./Characteristics\";\n\nclass SinglePokemon extends Component {\n  componentDidMount() {\n    const name = this.props.match.params.name;\n    const id = this.props.match.params.id;\n    this.props.poke(name);\n    this.props.spec(name);\n    this.props.char(id);\n  }\n\n  render() {\n    const {\n      sprites,\n      abilities,\n      height,\n      name,\n      stats,\n      types,\n      weight\n    } = this.props.pokemon;\n\n    const { id, chain } = this.props.chararcter;\n    const pic = sprites && sprites.front_default;\n\n    const abilityName =\n      abilities && abilities\n        ? abilities.map(ab => ab.ability.name).join(\", \")\n        : \"NA\";\n    const type =\n      types &&\n      types\n        .map(t => {\n          return t.type.name;\n        })\n        .join(\", \");\n\n    const stat =\n      stats &&\n      stats.map(st => {\n        return (\n          <div className=\"row align-items-center\" key={st.stat.name}>\n            <div className={`col-12 col-md-${3}`}>{st.stat.name}:</div>\n            <div className={`col-12 col-md${9}`}>\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar \"\n                  style={{\n                    width: `${st.base_stat / 1.7}%`,\n                    backgroundColor: `#c2185b`\n                  }}\n                  role=\"progressbar\"\n                  aria-valuenow=\"25\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >\n                  <small>{st.base_stat}</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      });\n\n    const ev =\n      stats &&\n      stats\n        .map(st => {\n          return `${st.effort} ${st.stat.name}`;\n        })\n        .join(\", \");\n\n    const catchRate =\n      this.props.species && this.props.species.capture_rate\n        ? this.props.species.capture_rate\n        : \"NA\";\n\n    const hash_step =\n      this.props.species && this.props.species.hatch_counter\n        ? this.props.species.hatch_counter\n        : \"NA\";\n\n    const egg_group =\n      this.props.species.egg_groups && this.props.species.egg_groups\n        ? this.props.species.egg_groups.map(el => el.name).join(\", \")\n        : \"NA\";\n\n    const evolve_from =\n      this.props.species.evolves_from_species &&\n      this.props.species.evolves_from_species.url;\n\n    const shape =\n      this.props.species.shape && this.props.species.shape.name\n        ? this.props.species.shape.name\n        : \"NA\";\n    return (\n      this.props.match.params.id && (\n        <div className=\"tc\">\n          <article className=\"mw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10\">\n            <div className=\"tc\">\n              <h5>Id: {id}</h5>\n              <img\n                alt=\"pokemon\"\n                src={pic}\n                className=\"br-100 h4 w4 dib ba b--black-05 pa2\"\n                title=\"Photo of pokemon\"\n              />\n              <h1 className=\"f3 mb2\">\n                <a href=\"#\" className=\"f5 fw4 gray mt0\">\n                  {name}\n                </a>\n              </h1>\n              <div className=\"monster-minutia\">\n                <strong>Type: </strong>\n                {type}\n              </div>\n            </div>\n          </article>\n\n          <article className=\"mw7 center bg-white br4 pa3 pa4-ns mv3 ba b--black-10\">\n            <div className=\"tc\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-md-9\">{stat}</div>\n                <div className=\"row mt-1\" />\n              </div>\n              <hr />\n\n              <div className=\"f3 mb2 bg-green\">Profile</div>\n              <div className=\"monster-minutia\">\n                <strong>Height: </strong>\n                <span>{height} m</span>\n                <strong>Weight: </strong>\n                <span>{weight} kg</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Catch Rate: </strong>\n                <span>{catchRate}</span>\n                <strong>Egg groups: </strong>\n                <span>{egg_group}</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Abilities: </strong>\n                <span>{abilityName} </span>\n                <strong>EVs: </strong>\n                <span>{ev}</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Hash Steps: </strong>\n                <span>{hash_step}</span>\n                <strong>Shape: </strong>\n                <span>{shape}</span>\n              </div>\n            </div>\n\n            <div className=\"f3 mb2 bg-green\">Evolution</div>\n            <Characteristics\n              id={id}\n              chain={chain}\n              img={pic}\n              evolve_from={evolve_from}\n              name={name}\n            />\n          </article>\n        </div>\n      )\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    pokemon: state.requestPokemon.pokemon,\n    chararcter: state.requestPokemon.characteristics,\n    species: state.requestPokemonSpecies.species\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    poke: name => dispatch(fetchByName(name)),\n    char: id => dispatch(getCharacteristics(id)),\n    spec: name => dispatch(getSpecies(name))\n  };\n};\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(SinglePokemon);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport SinglePokemon from \"../components/SinglePokemon\";\n\nexport default class Client extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/pokemon/:name/:id\" component={SinglePokemon} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_POKEMONS_PENDING,\n  REQUEST_POKEMONS_SUCCESS,\n  REQUEST_POKEMONS_FAILED,\n  GET_POKEMON_BY_NAME,\n  GETTING_POKEMON_FAILED,\n  GET_CHARACTERISTICS,\n  GET_SPECIES,\n  GET_SPECIES_ERROR\n} from \"./constants\";\n\nconst initialStateSearch = {\n  searchField: \"\"\n};\n\nexport const searchPokemons = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialStatePokemons = {\n  pokemons: [],\n  isPending: true\n};\n\nexport const requestPokemons = (state = initialStatePokemons, action = {}) => {\n  switch (action.type) {\n    case REQUEST_POKEMONS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_POKEMONS_SUCCESS:\n      return Object.assign({}, state, {\n        pokemons: action.payload,\n        isPending: false\n      });\n    case REQUEST_POKEMONS_FAILED:\n      return Object.assign({}, state, { error: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initStatePokemon = {\n  pokemon: [],\n  characteristics: []\n};\nexport const requestPokemon = (state = initStatePokemon, action = {}) => {\n  switch (action.type) {\n    case GET_POKEMON_BY_NAME:\n      return {\n        ...state,\n        pokemon: action.pokemon\n      };\n    case GETTING_POKEMON_FAILED:\n      return {\n        ...state,\n        error: action.error\n      };\n    case GET_CHARACTERISTICS:\n      return {\n        ...state,\n        characteristics: action.char\n      };\n    default:\n      return state;\n  }\n};\n\nconst initStatSpecies = {\n  species: []\n};\nexport const requestPokemonSpecies = (state = initStatSpecies, action = {}) => {\n  switch (action.type) {\n    case GET_SPECIES:\n      return {\n        ...state,\n        species: action.species\n      };\n    case GET_SPECIES_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport \"tachyons\";\n\nimport Client from \"./containers/Client\";\n\nimport registerServiceWorker from \"./serviceWorker\";\nimport {\n  requestPokemons,\n  searchPokemons,\n  requestPokemon,\n  requestPokemonSpecies\n} from \"./reducer\";\n\nimport \"./index.css\";\n\nconst logger = createLogger();\n\nconst rootReducers = combineReducers({\n  requestPokemons,\n  searchPokemons,\n  requestPokemon,\n  requestPokemonSpecies\n});\n\nconst store = createStore(\n  rootReducers,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Client />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}