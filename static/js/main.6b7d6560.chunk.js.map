{"version":3,"sources":["components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","components/Characteristics.js","components/SinglePokemon.js","containers/Client.js","serviceWorker.js","reducer.js","index.js"],"names":["SearchBox","searchChange","className","aria-label","type","placeholder","onChange","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","CardList","lazy","App","onRequestPokemons","pokemons","searchField","onSearchChange","isPending","filteredPokemons","length","filter","poke","name","toLowerCase","includes","fallback","ErrorBoundry","search","PureComponent","connect","searchPokemons","requestPokemons","dispatch","event","payload","target","value","a","axios","get","res","data","results","Characteristics","chain","img","evolve_from","pic","idx","evolves_to","species","url","split","evolving_idx","src","evolving_src","alt","xmlns","d","SinglePokemon","match","params","id","spec","char","pokemon","sprites","abilities","height","stats","types","weight","chararcter","front_default","abilityName","map","ab","ability","join","t","stat","st","key","style","width","base_stat","backgroundColor","role","aria-valuenow","aria-valuemin","aria-valuemax","ev","effort","catchRate","capture_rate","hash_step","hatch_counter","egg_group","egg_groups","el","evolves_from_species","shape","title","requestPokemon","characteristics","requestPokemonSpecies","fetchByName","console","getCharacteristics","getSpecies","Client","basename","process","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","initialStateSearch","initialStatePokemons","initStatePokemon","initStatSpecies","rootReducers","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6b7d6560.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        aria-label=\"Search pokemons\"\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search pokemons\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { PureComponent, Suspense, lazy } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setSearchField, requestPokemons } from \"../actions\";\n\nimport SearchBox from \"../components/SearchBox\";\n\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\nimport \"./App.css\";\n\nconst CardList = lazy(() => import(\"../components/CardList\"));\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchPokemons.searchField,\n    pokemons: state.requestPokemons.pokemons,\n    isPending: state.requestPokemons.isPending,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestPokemons: () => dispatch(requestPokemons()),\n  };\n};\n\nclass App extends PureComponent {\n  componentDidMount() {\n    this.props.onRequestPokemons();\n  }\n\n  render() {\n    const { pokemons, searchField, onSearchChange, isPending } = this.props;\n    const filteredPokemons =\n      pokemons && searchField.length > 0\n        ? pokemons.filter((poke) => {\n            return poke.name.toLowerCase().includes(searchField.toLowerCase());\n          })\n        : pokemons;\n\n    return (\n      <Suspense\n        fallback={\n          <div>\n            <h1>Loading</h1>\n          </div>\n        }\n      >\n        <div className=\"tc\">\n          <h1 className=\"f1\">Pokemons Friends</h1>\n          <SearchBox searchChange={onSearchChange} />\n\n          {isPending ? (\n            <h1>Loading</h1>\n          ) : (\n            <ErrorBoundry>\n              <CardList\n                pokemons={filteredPokemons}\n                isPending={isPending}\n                search={searchField}\n              />\n            </ErrorBoundry>\n          )}\n        </div>\n      </Suspense>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import axios from \"axios\";\n\nimport {\n  CHANGE_SEARCHFIELD,\n  REQUEST_POKEMONS_PENDING,\n  REQUEST_POKEMONS_SUCCESS,\n  REQUEST_POKEMONS_FAILED,\n  GET_POKEMON_BY_NAME,\n  GETTING_POKEMON_FAILED,\n  GET_CHARACTERISTICS,\n  GET_SPECIES,\n  GET_SPECIES_ERROR,\n} from \"./constants\";\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCHFIELD,\n  payload: text,\n});\n\nexport const requestPokemons = () => async (dispatch) => {\n  try {\n    dispatch({ type: REQUEST_POKEMONS_PENDING });\n    const url = `https://pokeapi.co/api/v2/pokemon/?limit=850`;\n    const res = await axios.get(url);\n    const poke = res.data;\n    dispatch({ type: REQUEST_POKEMONS_SUCCESS, payload: poke.results });\n  } catch (error) {\n    dispatch({ type: REQUEST_POKEMONS_FAILED, payload: error });\n  }\n};\n\nexport const fetchByName = (name) => async (dispatch) => {\n  try {\n    const url = `https://pokeapi.co/api/v2/pokemon/${name}`;\n    const res = await axios.get(url);\n    const pokemon = res.data;\n    dispatch({ type: GET_POKEMON_BY_NAME, pokemon });\n  } catch (error) {\n    dispatch({ type: GETTING_POKEMON_FAILED, error });\n  }\n};\n\nexport const getCharacteristics = (id) => async (dispatch) => {\n  try {\n    const url = `https://pokeapi.co/api/v2/evolution-chain/${id}`;\n    const poke = await axios.get(url);\n    const data = poke.data;\n    dispatch({ type: GET_CHARACTERISTICS, char: data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getSpecies = (name) => async (dispatch) => {\n  try {\n    const url = `https://pokeapi.co/api/v2/pokemon-species/${name}`;\n    const res = await axios.get(url);\n    const species = res.data;\n    dispatch({ type: GET_SPECIES, species });\n  } catch (error) {\n    dispatch({ type: GET_SPECIES_ERROR, error });\n  }\n};\n","export const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\";\n\nexport const REQUEST_POKEMONS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_POKEMONS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_POKEMONS_FAILED = \"REQUEST_ROBOTS_FAILED\";\nexport const GET_POKEMON_BY_NAME = \"GET_POKEMON_BY_NAME\";\nexport const GETTING_POKEMON_FAILED = \"GETTING_POKEMON_FAILED\";\nexport const GET_CHARACTERISTICS = \"GET_CHARACTERISTICS\";\nexport const GET_SPECIES_ERROR = \"GET_SPECIES_ERROR\";\nexport const GET_SPECIES = \"GET_SPECIES\";\n","import React, { Component } from \"react\";\n\nclass Characteristics extends Component {\n  render() {\n    const { chain, img, evolve_from, name } = this.props;\n    const pic = img && img;\n    const idx =\n      chain && chain.evolves_to.length > 1\n        ? chain.evolves_to[0].species.url.split(\"/\")[\n            chain.evolves_to[0].species.url.split(\"/\").length - 2\n          ]\n        : null;\n    const evolving_idx =\n      evolve_from && evolve_from.split(\"/\")[evolve_from.split(\"/\").length - 2];\n\n    const src = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${idx}.png?size=200x200`;\n    const evolving_src =\n      evolving_idx &&\n      `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolving_idx}.png?size=200x200`;\n\n    if (evolving_idx) {\n      return (\n        <div className=\"evolutions\">\n          <div className=\"evolution-row\">\n            <div className=\"evolution-row-inner\">\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={evolving_src} alt=\"\" />\n              </div>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg\">\n                <path d=\"M24 16V8l16 16-16 16v-8H8V16z\" />\n              </svg>\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={pic} alt=\"\" />\n              </div>\n            </div>\n            <div className=\"evolution-row-inner\">\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={pic} alt=\"\" />\n              </div>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg\">\n                <path d=\"M24 16V8l16 16-16 16v-8H8V16z\" />\n              </svg>\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={src} alt=\"\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (!idx) {\n      return (\n        <div>\n          <p>\n            <strong>{name} </strong> has no evolutions\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"evolutions\">\n          <div className=\"evolution-row\">\n            <div className=\"evolution-row-inner\">\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={pic} alt=\"\" />\n              </div>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"svg\">\n                <path d=\"M24 16V8l16 16-16 16v-8H8V16z\" />\n              </svg>\n              <div className=\"evolution-sprite monster-sprite\">\n                <img src={src} alt=\"\" />\n              </div>\n            </div>\n            <div className=\"evolution-label\">\n              <span>\n                <strong />.\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Characteristics;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchByName, getCharacteristics, getSpecies } from \"../actions\";\nimport Characteristics from \"./Characteristics\";\n\nclass SinglePokemon extends Component {\n  componentDidMount() {\n    const name = this.props.match.params.name;\n    const id = this.props.match.params.id;\n    this.props.poke(name);\n    this.props.spec(name);\n    this.props.char(id);\n  }\n\n  render() {\n    const {\n      sprites,\n      abilities,\n      height,\n      name,\n      stats,\n      types,\n      weight,\n    } = this.props.pokemon;\n\n    const { id, chain } = this.props.chararcter;\n    const pic = sprites && sprites.front_default;\n\n    const abilityName =\n      abilities && abilities\n        ? abilities.map((ab) => ab.ability.name).join(\", \")\n        : \"NA\";\n    const type =\n      types &&\n      types\n        .map((t) => {\n          return t.type.name;\n        })\n        .join(\", \");\n\n    const stat =\n      stats &&\n      stats.map((st) => {\n        return (\n          <div className=\"row align-items-center\" key={st.stat.name}>\n            <div className={`col-12 col-md-${3}`}>{st.stat.name}:</div>\n            <div className={`col-12 col-md${9}`}>\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar\"\n                  style={{\n                    width: `${st.base_stat / 1.7}%`,\n                    backgroundColor: `#c2185b`,\n                  }}\n                  role=\"progressbar\"\n                  aria-valuenow=\"25\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >\n                  <small>{st.base_stat}</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      });\n\n    const ev =\n      stats &&\n      stats\n        .map((st) => {\n          return `${st.effort} ${st.stat.name}`;\n        })\n        .join(\", \");\n\n    const catchRate =\n      this.props.species && this.props.species.capture_rate\n        ? this.props.species.capture_rate\n        : \"NA\";\n\n    const hash_step =\n      this.props.species && this.props.species.hatch_counter\n        ? this.props.species.hatch_counter\n        : \"NA\";\n\n    const egg_group =\n      this.props.species.egg_groups && this.props.species.egg_groups\n        ? this.props.species.egg_groups.map((el) => el.name).join(\", \")\n        : \"NA\";\n\n    const evolve_from =\n      this.props.species.evolves_from_species &&\n      this.props.species.evolves_from_species.url;\n\n    const shape =\n      this.props.species.shape && this.props.species.shape.name\n        ? this.props.species.shape.name\n        : \"NA\";\n    return (\n      this.props.match.params.id && (\n        <div className=\"tc\">\n          <article className=\"mw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10\">\n            <div className=\"tc\">\n              <h5>Id: {id}</h5>\n              <img\n                alt=\"pokemon\"\n                src={pic}\n                className=\"br-100 h4 w4 dib ba b--black-05 pa2\"\n                title=\"Photo of pokemon\"\n              />\n              <h1 className=\"f3 mb2\">\n                <button className=\"f5 fw4 gray mt0\">{name}</button>\n              </h1>\n              <div className=\"monster-minutia\">\n                <strong>Type: </strong>\n                {type}\n              </div>\n            </div>\n          </article>\n\n          <article className=\"mw7 center bg-white br4 pa3 pa4-ns mv3 ba b--black-10\">\n            <div className=\"tc\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-md-9\">{stat}</div>\n                <div className=\"row mt-1\" />\n              </div>\n              <hr />\n\n              <div className=\"f3 mb2 bg-green\">Profile</div>\n              <div className=\"monster-minutia\">\n                <strong>Height: </strong>\n                <span>{height} m</span>\n                <strong>Weight: </strong>\n                <span>{weight} kg</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Catch Rate: </strong>\n                <span>{catchRate}</span>\n                <strong>Egg groups: </strong>\n                <span>{egg_group}</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Abilities: </strong>\n                <span>{abilityName} </span>\n                <strong>EVs: </strong>\n                <span>{ev}</span>\n              </div>\n\n              <div className=\"monster-minutia\">\n                <strong>Hash Steps: </strong>\n                <span>{hash_step}</span>\n                <strong>Shape: </strong>\n                <span>{shape}</span>\n              </div>\n            </div>\n\n            <div className=\"f3 mb2 bg-green\">Evolution</div>\n            <Characteristics\n              id={id}\n              chain={chain}\n              img={pic}\n              evolve_from={evolve_from}\n              name={name}\n            />\n          </article>\n        </div>\n      )\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    pokemon: state.requestPokemon.pokemon,\n    chararcter: state.requestPokemon.characteristics,\n    species: state.requestPokemonSpecies.species,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    poke: (name) => dispatch(fetchByName(name)),\n    char: (id) => dispatch(getCharacteristics(id)),\n    spec: (name) => dispatch(getSpecies(name)),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(SinglePokemon);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport SinglePokemon from \"../components/SinglePokemon\";\n\nexport default class Client extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/pokemon/:name/:id\" component={SinglePokemon} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_POKEMONS_PENDING,\n  REQUEST_POKEMONS_SUCCESS,\n  REQUEST_POKEMONS_FAILED,\n  GET_POKEMON_BY_NAME,\n  GETTING_POKEMON_FAILED,\n  GET_CHARACTERISTICS,\n  GET_SPECIES,\n  GET_SPECIES_ERROR\n} from \"./constants\";\n\nconst initialStateSearch = {\n  searchField: \"\"\n};\n\nexport const searchPokemons = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialStatePokemons = {\n  pokemons: [],\n  isPending: true\n};\n\nexport const requestPokemons = (state = initialStatePokemons, action = {}) => {\n  switch (action.type) {\n    case REQUEST_POKEMONS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_POKEMONS_SUCCESS:\n      return Object.assign({}, state, {\n        pokemons: action.payload,\n        isPending: false\n      });\n    case REQUEST_POKEMONS_FAILED:\n      return Object.assign({}, state, { error: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initStatePokemon = {\n  pokemon: [],\n  characteristics: []\n};\nexport const requestPokemon = (state = initStatePokemon, action = {}) => {\n  switch (action.type) {\n    case GET_POKEMON_BY_NAME:\n      return {\n        ...state,\n        pokemon: action.pokemon\n      };\n    case GETTING_POKEMON_FAILED:\n      return {\n        ...state,\n        error: action.error\n      };\n    case GET_CHARACTERISTICS:\n      return {\n        ...state,\n        characteristics: action.char\n      };\n    default:\n      return state;\n  }\n};\n\nconst initStatSpecies = {\n  species: []\n};\nexport const requestPokemonSpecies = (state = initStatSpecies, action = {}) => {\n  switch (action.type) {\n    case GET_SPECIES:\n      return {\n        ...state,\n        species: action.species\n      };\n    case GET_SPECIES_ERROR:\n      return {\n        ...state,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"tachyons\";\n\nimport Client from \"./containers/Client\";\n\nimport registerServiceWorker from \"./serviceWorker\";\nimport {\n  requestPokemons,\n  searchPokemons,\n  requestPokemon,\n  requestPokemonSpecies,\n} from \"./reducer\";\n\nimport \"./index.css\";\n\nconst rootReducers = combineReducers({\n  requestPokemons,\n  searchPokemons,\n  requestPokemon,\n  requestPokemonSpecies,\n});\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Client />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}